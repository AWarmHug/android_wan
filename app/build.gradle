import com.bingo.plugin.RouterPlugin

apply plugin: 'com.android.application'
//制作补丁时将这个打开，auto-patch-plugin紧跟着com.android.application
//apply plugin: 'auto-patch-plugin'
if (isReleaseBuildType()){
    apply plugin: robust.gradle.plugin.RobustTransform
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: RouterPlugin

android {
    compileSdk 31
    dataBinding.enabled = true

    defaultConfig {
        applicationId "com.bingo.android_wan"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "arm64-v8a"
        }

        resConfigs "zh-rCN"

    }

    signingConfigs {
        release {
            storeFile file('../key.jks')
            storePassword "Secret123"
            keyAlias "key0"
            keyPassword "Secret123"
//            v2SigningEnabled false
        }
    }


    buildTypes {

        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

boolean isReleaseBuildType(){
    for(String s : gradle.startParameter.taskNames) {
        if (s.contains("Release") | s.contains("release")) {
            return true
        }
    }
    return false
}

// 每次执行assembleRelease都要备份apk和mapping文件，防止mapping文件丢失
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease' || task.name == 'aR') {
        task.doLast {
            copy {
                from "../app/build/intermediates/apk/release"
                from "../app/build/outputs/mapping/release"
                from "../app/build/outputs/robust"
                include('**/*.apk')
                include('mapping.txt')
                include('methodsMap.robust')
                include('robust.apkhash')
                into "../releaseBackup/" + new Date().format('yyyy.MM.dd_HH_mm')
            }
        }
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    def version_coroutines = "1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.core:core-splashscreen:1.0.0-beta01"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.github.AWarmHug.Router:router:0.0.7'
    kapt 'com.github.AWarmHug.Router:processor:0.0.7'

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    def version_fragment = "1.3.5"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"
    implementation "androidx.paging:paging-runtime-ktx:3.0.0-alpha07"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.0"

    implementation "androidx.collection:collection-ktx:1.1.0"

    def version_lifecycle = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"

    implementation "androidx.palette:palette-ktx:1.0.0"

    def version_room = "2.3.0"
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    implementation project(':flutter')

    implementation 'com.github.AWarmHug.Robust:robust:0.4.104'


}